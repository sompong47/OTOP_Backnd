import os
import django
import cloudinary
import cloudinary.uploader
from django.conf import settings

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'otop_project.settings')
django.setup()

# -----------------------------
# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Cloudinary ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢
# -----------------------------
cloudinary.config(
    cloud_name='dam4zvtx7',
    api_key='969522454121228',
    api_secret='hm-5g8nJmZyfzX20Sua8P-ojNiM',
)

from otop_app.models import Product

print(f"üìÅ MEDIA_ROOT: {settings.MEDIA_ROOT}")
if not os.path.exists(settings.MEDIA_ROOT):
    print("‚ùå Media folder ‡πÑ‡∏°‡πà‡∏û‡∏ö")
    exit(1)

products = Product.objects.all()
for p in products:
    try:
        if not p.image or p.image.name.startswith('http'):
            print(f"‚è≠ Product {p.id} - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô URL ‡πÅ‡∏•‡πâ‡∏ß")
            continue

        file_path = os.path.join(settings.MEDIA_ROOT, p.image.name)
        if not os.path.exists(file_path):
            print(f"‚ùå Product {p.id} - ‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏û‡∏ö: {file_path}")
            continue

        result = cloudinary.uploader.upload(file_path, folder="products")
        secure_url = result.get('secure_url')
        if not secure_url:
            print(f"‚ùå Product {p.id} - ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            continue

        p.image = secure_url
        p.save()
        print(f"‚úÖ Product {p.id} - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: {secure_url}")

    except Exception as e:
        print(f"‚ùå Product {p.id} - ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {str(e)}")
